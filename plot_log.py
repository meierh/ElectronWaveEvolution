# generated by ChatGPT
import argparse
import pandas as pd
import matplotlib.pyplot as plt

def plot_csv(filename):
    # Read the CSV file
    data = pd.read_csv(filename)

    # Create the plot
    plt.figure(figsize=(10, 6))

    # Set both axes to logarithmic scale
    plt.xscale('log')
    plt.yscale('log')

    # Set labels and title
    plt.xlabel(data.columns[0])  # Set the x-axis label from the CSV column name
    plt.ylabel(data.columns[1])  # Set the y-axis label from the CSV column name
    plt.title(f'Log-Scale Plot of {filename}')  # Set the title using the filename

    # Plot each data point individually with its number in the legend
    legend_labels = []
    for i in range(len(data)):
        x = data.iloc[i, 0]
        y = data.iloc[i, 1]
        
        # Plot each point and assign a unique label for the legend
        label = f'{i+1}: ({x}, {y})'  # Format the label for the legend
        plt.plot(x, y, 'bo', label=label)  # Plot with blue dots

        # Annotate the points with numbers
        plt.text(x * 1.1, y * 1.1, f'{i+1}', fontsize=8, ha='left', va='bottom')  # Annotate with index number

    # Remove duplicate labels in the legend (so each point has a unique label in the legend)
    handles, labels = plt.gca().get_legend_handles_labels()
    unique_labels = []
    unique_handles = []
    seen_labels = set()
    for handle, label in zip(handles, labels):
        if label not in seen_labels:
            unique_labels.append(label)
            unique_handles.append(handle)
            seen_labels.add(label)

    # Create the legend with unique labels
    plt.legend(unique_handles, unique_labels, title="Data Points", loc='upper left', fontsize=8)

    # Save the plot to a file
    output_filename = filename.split('.')[0] + '_log_plot_with_numbered_points_in_legend.png'
    plt.savefig(output_filename)
    print(f'Log-Scale Plot with numbered points in the legend saved as {output_filename}')
    plt.close()

if __name__ == "__main__":
    # Set up command-line argument parsing
    parser = argparse.ArgumentParser(description='Plot and save data from a CSV file with logarithmic scales and numbered points in legend.')
    parser.add_argument('filename', type=str, help='Name of the CSV file to plot')
    args = parser.parse_args()

    # Call the function to plot the data from the provided CSV file
    plot_csv(args.filename)
